// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RaceTrack.Db;

#nullable disable

namespace RaceTrack.Db.Migrations
{
    [DbContext(typeof(RaceTrackDbContext))]
    [Migration("20230923080806_ChangeRaceStatus-tostring")]
    partial class ChangeRaceStatustostring
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("RaceTrack.Db.Entities.Lap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<int>("LapNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RaceId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("TotalRaceDuration")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("RaceId");

                    b.ToTable("Laps");
                });

            modelBuilder.Entity("RaceTrack.Db.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RaceTrack.Db.Entities.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalLaps")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WinnerPlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WinnerPlayerId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("RaceTrack.Db.Entities.Lap", b =>
                {
                    b.HasOne("RaceTrack.Db.Entities.Player", "Player")
                        .WithMany("Laps")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaceTrack.Db.Entities.Race", "Race")
                        .WithMany("Laps")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("RaceTrack.Db.Entities.Race", b =>
                {
                    b.HasOne("RaceTrack.Db.Entities.Player", "WinnerPlayer")
                        .WithMany()
                        .HasForeignKey("WinnerPlayerId");

                    b.Navigation("WinnerPlayer");
                });

            modelBuilder.Entity("RaceTrack.Db.Entities.Player", b =>
                {
                    b.Navigation("Laps");
                });

            modelBuilder.Entity("RaceTrack.Db.Entities.Race", b =>
                {
                    b.Navigation("Laps");
                });
#pragma warning restore 612, 618
        }
    }
}
